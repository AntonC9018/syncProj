@echo off
rem echo %0 %*
rem ---------------------------------------------------------------------------------
rem  General installations path probe.
rem ---------------------------------------------------------------------------------
if defined ANDROID_HOME goto haveAndroidHome
for /f "skip=2 tokens=2*" %%a in ('reg query "HKLM\Software\Wow6432Node\Android SDK Tools" /v Path') do set ANDROID_HOME=%%b
:haveAndroidHome

if defined JAVA_HOME goto haveJavaHome
for /f "skip=2 tokens=2*" %%a in ('reg query "HKLM\Software\JavaSoft\Java Development Kit" /v CurrentVersion') do set CurVer=%%b
for /f "skip=2 tokens=2*" %%a in ('reg query "HKLM\Software\JavaSoft\Java Development Kit\%CurVer%" /v JavaHome') do set JAVA_HOME=%%b
:haveJavaHome

if "%1" == "env" exit /b
setlocal enabledelayedexpansion
rem ---------------------------------------------------------------------------------
rem  Gradle version information
rem ---------------------------------------------------------------------------------
set REQUEST_GRADLE_VERSION=4.1

rem ---------------------------------------------------------------------------------
rem 'clean' task cannot be declared with rest of build.gradle configuration.
rem Declaring custom 'clean' task when using the standard Gradle lifecycle plugins is not allowed.
rem ---------------------------------------------------------------------------------
if "%1" == "clean" (
    rem Add here local folder names to delete
    for %%a in ( 
        .gradle
        .workspace
        .vs
        bin
        build
        obj
        src\main\jniLibs
    ) do (
        if exist %~dps0%%a\NUL (
            echo Deleting folder '%~dp0%%a'...
            rmdir /s /q "%~dp0%%a"
        )
    )
    exit /b
)

rem ---------------------------------------------------------------------------------
rem     Reconstruct command from form assembleARM8Release to assemblearm64-v8aRelease
rem ---------------------------------------------------------------------------------
set command=%3
set platform=
set config=

if defined command (
    rem 'Debug' configuration
    set config=!command:~-5,5!
    set action=!command:~0,8!
    set platform=!command:~8,-5!

    rem 'Release' configuration
    if not !config!. == Debug. (
        set config=!command:~-7,7!
        set platform=!command:~8,-7!

        rem Something else?
        if not !config!. == Release. set config=
    )
)

if defined platform (
    rem Remap to be same as $(Platform)
    if !platform! == ARM7 set platform=arm
    if !platform! == ARM8 set platform=arm64
    if !platform! == x86-64 set platform=x64
    rem x86 stays the same
)

set command=%action%%platform%%config%
set args=%1 %2 %command% %4 %5 %6 %7 %8 %9

set JAVA_EXE=java.exe
if defined JAVA_HOME set JAVA_EXE=%JAVA_HOME%\bin\java.exe

if defined command if exist "%~dp0\prebuild.bat" (
    rem call "%~dp0\prebuild.bat" %platform% %config%
    if errorlevel 1 endlocal && exit /b 1
)

rem ---------------------------------------------------------------------------------
rem Try local gradle wrapper distribution first, if not found, create our own.
rem ---------------------------------------------------------------------------------
set CLASSPATH=%~dp0gradle\wrapper\gradle-wrapper.jar
if not exist "%CLASSPATH%" (
    call:PrepareGradleWrapper
    if errorlevel 1 exit /b 1

    set "CLASSPATH=%~dp0build\gradle-wrapper.jar"
)

rem -----------------------------------------------------------------------
rem Following environment variable must be set from environment variable to avoid following error:
rem
rem Error occurred during initialization of VM
rem Could not reserve enough space for 1572864KB object heap
rem
rem Does not works as in-command line option, as needs to be passed to external process.
rem -----------------------------------------------------------------------
if not defined _JAVA_OPTIONS set _JAVA_OPTIONS=-Xmx512M
"%JAVA_EXE%" "-Dorg.gradle.appname=%~n0" -classpath "%CLASSPATH%" org.gradle.wrapper.GradleWrapperMain %args%
endlocal
exit /b

rem -----------------------------------------------------------------------
rem Generates local copy of gradle wrapper and properties file to it.
rem -----------------------------------------------------------------------
:PrepareGradleWrapper
if not exist %~dp0build\gradle-wrapper.jar (

    call:FindGradleWrapper
    if errorlevel 1 ( 
        echo Error: Gradle wrapper not found
        exit /b 1
    )

    xcopy /y "!GRWRAP!" "%~dp0build\" >nul
    if errorlevel 1 exit /b 1
)

set "GRPROP=%~dp0build\gradle-wrapper.properties"
if not exist "%GRPROP%" (
    echo # Generated by %~nx0 batch>!GRPROP!
    echo distributionBase=GRADLE_USER_HOME>>!GRPROP!
    echo distributionPath=wrapper/dists>>!GRPROP!
    echo zipStoreBase=GRADLE_USER_HOME>>!GRPROP!
    echo zipStorePath=wrapper/dists>>!GRPROP!
    echo distributionUrl=https\://services.gradle.org/distributions/gradle-%REQUEST_GRADLE_VERSION%-all.zip>>!GRPROP!
)

exit /b 0

rem -----------------------------------------------------------------------
rem Finds gradle-wrapper.jar from Visual studio installation.
rem -----------------------------------------------------------------------
:FindGradleWrapper
setlocal enabledelayedexpansion
for %%v in (2017 2015) do (
    set /a n=0
    call:vs%%v
    set VSPATH=
    for /f "tokens=1,2*" %%a in ('reg query "HKLM\SOFTWARE\Wow6432Node\Microsoft\VisualStudio\SxS\VS7" /v "!n!.0" 2^>nul') do set "VSPATH=%%c"
    if not "!VSPATH!" == "" (
        set GRWRAP=!VSPATH!Common7\IDE\ProjectTemplates\VC\Cross Platform\Android\1033\GradleApplication\gradle\wrapper\gradle-wrapper.jar
        if exist "!GRWRAP!" goto FindGradleWrapper_found
    )
)
set GRWRAP=%~dp0gradle\wrapper\gradle-wrapper.jar
if exist "%GRWRAP%" goto FindGradleWrapper_found
endlocal & exit /b 1

:FindGradleWrapper_found
endlocal & set GRWRAP=%GRWRAP%&& exit /b 0

:vs2017
    set /a "n=%n%+1"
:vs2015
    set /a "n=%n%+14"
    exit /b

